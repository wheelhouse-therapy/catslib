%% home
{# Circles code #}
<style>
	:root {
		--color1: #63cdfc;
		--color2: #388ed4;
		--textColor: black;
	}
	.toCircle {
		text-decoration: none;
		display: flex;
		justify-content: center;
		align-items: center;
		text-align: center;
		margin-bottom: 20px;
		margin-left: 10px;
		border-style: inset outset outset inset;
		border-width: 3px;
		border-radius: 50%;
	}
	@keyframes colorChange {
		from {background-color: var(--color1); border-color: var(--color1);}
		to {background-color: var(--color2); border-color: var(--color2);}
	}
	[class *= catsCircle] {
		box-sizing: border-box;
		height: 200px;
		width: 200px;
		color: var(--textColor) !important;
	}
	.catsCircle1 {
		animation: colorChange 10s ease-in-out infinite alternate;
	}
	.catsCircle2 {
		animation: colorChange 10s ease-in-out -5s infinite alternate;
	}
	/* Class for bluring the background for menus */
	.blur {
		background: rgba(0, 0, 0, 0.2);
		backdrop-filter: blur(8px);
		opacity: 1!important;
	}
</style>
<script>
function createCircle(elements, styles) {
	for (var x in elements) {
		var diameter = styles[x][0], color = styles[x][1], textColor = styles[x][2];
		elements[x].style.height = diameter;
		elements[x].style.width = diameter;
		elements[x].style.color = textColor;
		elements[x].style.backgroundColor = color;
		elements[x].style.borderColor = color;
	}
	return true;
}

function loadMenu(menu){
	$.ajax({
        type: "POST",
        data: {cmd:'loadMenu',screen:menu},
        url: "jx.php",
        success: function(data, textStatus, jqXHR) {
            var jsData = JSON.parse(data);
            if(jsData.bOk){
            	document.getElementById('menu_body').innerHTML = jsData.sOut;
            }
            else{
            	document.getElementById('menu_body').innerHTML = jsData.sErr;
            }
            $('#menu_dialog').modal('show');
            $('.modal-backdrop').addClass('blur');
        },
        error: function(jqXHR, status, error) {
            console.log(status + ": " + error);
        }
    });
}

function run() {
    var x = document.querySelectorAll('.toCircle:not([class*=\"catsCircle\"])');
    var elements = [], styles = [];
    for(var y = 0; y < x.length; y++) {
		elements.push(x[y]);
		styles.push(x[y].dataset.format.split(' '));
	}
	createCircle(elements, styles);

	/* Unused Appointments code
	$(document).ready( function () {

		// Generic seedjx submission
		
		$('.seedjx-submit').click( function () { SEEDJX_Form1( 'jx.php', $(this) ); } );

		// the Appointment Review button launches catsappt--reviewd
		
		$('.appt-newform').submit( function (e) {
			e.preventDefault();
			var gid = $(this).find('#appt-gid').val();
			var cid = $(this).find('#appt-clientid').val();
			var divSpecial = this.appt();

			$.ajax({
				type: 'POST',
				data: { cmd: 'catsappt--review', google_cal_ev_id: gid, fk_clients: cid },
				url: 'jx.php',
				success: function(data, textStatus, jqXHR) {
					var jsData = JSON.parse(data);
					var sSpecial = jsData.bOk ? jsData.sOut : 'No, something is wrong';
					divSpecial.outerHTML = sSpecial;
				},
				error: function(jqXHR, status, error) {
					console.log(status + ": " + error);
				}
			});
		});
	}); */

}
window.addEventListener("DOMContentLoaded", function(){
    $('body').backDetect(function(){
	  window.location = '?screen=goBack';
    });
});
</script>


%% tnrs
<link rel='stylesheet' href='{{ CATSDIR_CSS }}tnrs.css'>

%% distributeReports
<script>
function jxCall() {
    $.ajax({
        type: "POST",
        data: {
            idOut: document.getElementById("clientlist").value,
            cmd: "therapist-distribute-reports-update-client"
            },
        url: "jx.php",
        success: function(data, textStatus, jqXHR) {
            document.getElementById("content").innerHTML = JSON.parse(data).sOut;
            initPage();
        },
        error: function(jqXHR, status, error) {
            console.log(status + ": " + error);
        }
    });
}

class DistributeReports
{
    static generateLabels() 
    {
        /* Instead of getting the docx with ajax and trying to figure out how to save it, 
           open a window that refers to the same ajax command and let the browser do that work.
           
           Open a separate window (i.e. download a separate file) for every 5 labels because that's what fits in the template
         */
        var chunkData = this.arrayChunk(this.getSelected("label"), 5);
        if (chunkData.length == 0) {
			alert("Please select at least one address.")
			return;
        }
        for (var i = 0; i < chunkData.length; i++) {
            var u = "";
            for(var j = 0; j < chunkData[i].length; j++) {
                u += "&info[]="+chunkData[i][j];
            }
            window.open("jx.php?cmd=therapist-generate-address-labels"+u);
        }

    /* 
        for (var i = 0; i < chunkData.length; i++) {
            $.ajax({
                type: "POST",
                data: {
                    info: chunkData[i],
                    cmd: "therapist-generate-address-labels"
                },
                url: "jx.php",
                success: function(data, textStatus, jqXHR) {},
                error: function(jqXHR, status, error) {}
            });
        }
    */
    }

    static generateCoverLetter()
    {
        var covers = this.getSelected("cover-letter");
        if (covers.length == 0) {
			alert("Please select at least one provider for the cover letter.")
			return;
        }
        // need some code here to sub info into the cover letter template
        for (var i = 0; i < covers.length; i++) {
			window.open("jx.php?cmd=therapist-generate-cover-letters&info=" + covers[i] + 
					"&client=" + document.getElementById("clientlist").value);
        }
    }

    static generateFaxes() {
        var faxes = this.getSelected("fax");
        if (faxes.length == 0) {
			alert("Please select at least one fax recipient.")
			return;
        }
        for (var i = 0; i < faxes.length; i++) {
            window.open("jx.php?cmd=therapist-generate-fax-cover&info="+faxes[i]);
        }
/*        
        $.ajax({
	        type: "POST",
	        data: {
	            info: [ sendData[i] ], 
	            //don't remove the spaces in the array or twig recognises double ] as something
	            cmd: "therapist-generate-fax-cover"
	        },
	        url: "jx.php",
	        success: function(data, textStatus, jqXHR) {},
	        error: function(jqXHR, status, error) {}
	    });
*/
    }
    static generateEmails() {
        const emails = this.getEmails();
        if (emails == "") {
            // maybe need a more user-friendly alert?
            alert("Please select at least one email.")
            return;
        }
        const messageSubject = "OT Report";
        const messageBody = `Hi  ,

Attached is your OT report from Collaborative Approach Therapy Services 
at Dr. Scott's office.

The password is based on your address.  Numbers, no space, capital on 
the first name of the your street.

eg.  456 Sussex Dr -- password would be:  456Sussex

     123 Happy Bay Road -- password would be: 123Happy

Please let me know if you have any difficulty opening it.

Also please let me know if I have made errors in the report.  You have 
indicated that I have your permission to share information with:   .  I 
will wait for a few days to hear from you, in case there are any 
errors/corrections, before sending the report on to them.  You can 
always withdraw your consent, so please let me know if for any reason 
you do not wish for me to share this report with them.  Thank you!

Sue.


-- 
Sue Wahl,
Occupational Therapist
CATS- Brant
Collaborative Approach Therapy Services
158 Brant St
St. George, Ontario
N0E 1N0
226 748 3607
`;
        window.open("mailto:" + this.getEmails() + 
                "?subject=" + encodeURI(messageSubject) + 
                "&body=" + encodeURI(messageBody));
    }
    static getEmails() {
        var list = document.querySelectorAll("input.email:checked ~ span");
        var out = [];
        for (let i = 0; i < list.length; i++) {
            out.push(list[i].innerHTML);
        }
        return out.join(";");
    }

    static getSelected(type) 
    {
        var list = document.querySelectorAll("input." + type + ":checked:not(.no-select)");
        var out = [];
        for (let i = 0; i < list.length; i++) {
            var ref = list[i].parentElement.parentElement;
            if (type == "cover-letter") {
            	//cover letter inputs are in an extra div, so we do one more parentElement to compensate
				ref = ref.parentElement;
            }
            out.push(ref.dataset.id);
        }
        return out;
    }
    static arrayChunk(array, size) 
    {
        let out = [];
        let chunks = Math.floor(array.length / size);
        let leftover = array.length % size;
        for (let i = 0; i < chunks; i++) {
            out.push(array.splice(0, size));
        }
        if (leftover > 0) {
            out.push(array);
        }
        return out;
    }
}
function updateCoverLetterVisibility() {
	// shows/hides the checkbox for cover letters when the address labels checkbox is changed
	// this -> the address labels checkbox that was changed
	// we search through the siblings so that we don't make assumptions about the DOM
	var coverLetterCont = this.nextElementSibling;
	while (coverLetterCont.nextElementSibling) {
		// loop through siblings until we find .cover-letter-container
		if (coverLetterCont.classList.contains("cover-letter-container")) {
			break;
		}
		coverLetterCont = coverLetterCont.nextElementSibling;
	}
	// same deal, we're looping through children this time
	var coverLetterCheck = coverLetterCont.firstElementChild;
	while (coverLetterCheck.nextElementSibling) {
		// loop through siblings until we find .cover-letter
		if (coverLetterCheck.classList.contains("cover-letter")) {
			break;
		}
		coverLetterCheck = coverLetterCheck.nextElementSibling;
	}
	coverLetterCont.classList.toggle("show"); // this tells css not to hide the div
	coverLetterCheck.classList.toggle("no-select"); 
	//this tells getSelected to ignore this checkbox
	// css does the rest
}
function initPage() {
	// add event listeners to each address label checkbox
	var addressLabelBoxes = document.getElementsByClassName("ext-pro-label");
	for (var i = 0; i < addressLabelBoxes.length; i++) {
		addressLabelBoxes[i].addEventListener("change", updateCoverLetterVisibility);
	}
}
window.addEventListener("DOMContentLoaded", initPage);
</script>
<style>
td:not(.borderless),th:not(.borderless) {
    border: 2px solid black;
}
table th,td {
    padding: 5px;
    min-width: 100px;
}
table tr {
    vertical-align: top;
}
table {
    margin-top: 10px;
}
#clientlist {
    margin-top: 10px;
}
button.generate {
    width: 100%;
}
.cover-letter-container {
	display: inline-block;
}
.cover-letter-container:not(.show) {
	display: none;
}
</style>

%% akaunting
<!-- AdminLTE Skins -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/admin-lte/2.4.17/css/skins/skin-green.min.css" integrity="sha256-lQ1V4KFTTWz5sNliDzHYxCIIoiipHq5XYEQbdCEPllk=" crossorigin="anonymous" />
<!-- App style -->
<link rel="stylesheet" href="{{ CATSDIR_AKAUNTING }}css/app.css?v=1.3.17">
<link rel="stylesheet" href="{{ CATSDIR_AKAUNTING }}css/akaunting-green.css?v=1.3.17">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker3.css" integrity="sha256-AghQEDQh6JXTN1iI/BatwbIHpJRKQcg2lay7DE5U/RQ=" crossorigin="anonymous" />


<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
<script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
<script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
<!-- Select2 -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js"></script>
<!-- Mask Money -->
<script src="{{ CATSDIR_AKAUNTING }}js/jquery/jquery.maskMoney.js"></script>

<script src="{{ CATSDIR_AKAUNTING }}js/app.js?v=1.3.17"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.js" integrity="sha256-JIBDRWRB0n67sjMusTy4xZ9L09V8BINF0nd/UUUOi48=" crossorigin="anonymous"></script>
<script type="text/javascript">
    var item_row = '1';
    function totalItem() {
        $('.box-footer .btn-success').prop('disabled', true);
        var ra = [];
        document.querySelectorAll("input[id^=item-debit-]").forEach(a => ra.push($(a).maskMoney('unmasked')[0]));
        var debit = ra.reduce((a,b) => Number(a)+Number(b));

        var ra = [];
        document.querySelectorAll("input[id^=item-credit-]").forEach(a => ra.push($(a).maskMoney('unmasked')[0]));
        var credit = ra.reduce((a,b) => Number(a)+Number(b));
        
        $('#debit-sub-total').html(debit);
        $('#credit-sub-total').html(credit);
        $('#debit-grand-total').html(debit);
    	$('#credit-grand-total').html(credit);
        if (debit == credit) {
            $('.box-footer .btn-success').prop('disabled', false);
            $('#debit-grand-total').parent().css('background-color', '#d0e9c6');
            $('#credit-grand-total').parent().css('background-color', '#d0e9c6');
        } else if (debit > credit) {
            $('#debit-grand-total').parent().css('background-color', '#d0e9c6');
            $('#credit-grand-total').parent().css('background-color', '#f2dede');
        } else if (debit < credit) {
            $('#debit-grand-total').parent().css('background-color', '#f2dede');
            $('#credit-grand-total').parent().css('background-color', '#d0e9c6');
        }
    }
    $(document).on('click', '#button-add-item', function (e) {
        			var clone = document.getElementById('tableRow').content.cloneNode(true);
        			clone.querySelectorAll('[id="item-debit-"]')[0].id = "item-debit-" + item_row;
        			clone.querySelectorAll('[id="item-credit-"]')[0].id = "item-credit-" + item_row;
                    $('#items tbody #addItem').before(clone);

                    $('[data-toggle="tooltip"]').tooltip('hide');
debugger;
                    $("#item-debit-" + item_row).maskMoney({
                        thousands : ',',
                        decimal : '.',
                        precision : 2,
                        allowZero : true,
                        prefix : '$',
                        suffix : ''
                    });

                    $("#item-debit-" + item_row).trigger('focusout');

                    $("#item-credit-" + item_row).maskMoney({
                    	thousands : ',',
                        decimal : '.',
                        precision : 2,
                        allowZero : true,
                        prefix : '$',
                        suffix : ''
                    });

                    $("#item-credit-" + item_row).trigger('focusout');

                    $(".input-account").select2({
                        placeholder: {
                            id: '-1', // the value of the option
                            text: "- Select Account -"
                        }
                    });

                    item_row++;
    });

    $(document).on('change', '.input-price', function(){
        alert('onChange');
        id = $(this).attr('id');
debugger;
        ids = id.split('-');

        amount = $(this).maskMoney('unmasked')[0];

        $(this).parent().removeClass('has-error');
        $(this).parent().find('.help-block').remove();

        if (ids[1] == 'debit') {
            $('#item-credit-' + ids[2]).prop('disabled', true);

            $('#item-credit-' + ids[2]).parent().removeClass('has-error');
            $('#item-credit-' + ids[2]).parent().find('.help-block').remove();
        } else {
            $('#item-debit-' + ids[2]).prop('disabled', true);

            $('#item-debit-' + ids[2]).parent().removeClass('has-error');
            $('#item-debit-' + ids[2]).parent().find('.help-block').remove();
        }

        if (amount == 0) {
            $('#item-debit-' + ids[2]).prop('disabled', false);
            $('#item-credit-' + ids[2]).prop('disabled', false);
        }
    });

    var focus = false;

    $(document).on('focusin', '#items .input-price', function(){
        focus = true;
    });

    $(document).on('blur', '#items .input-price', function(){
        if (focus) {
            totalItem();

            focus = false;
        }
    });

    $(document).ready(function(){
        $('.box-footer .btn-success').prop('disabled', true);

        
        $(".input-price").maskMoney({
            thousands : ',',
            decimal : '.',
            precision : 2,
            allowZero : true,
                        prefix : '$'
                    });

        $('.input-price').trigger('focusout');

        $(".input-account").select2({
            placeholder: {
                id: '-1', // the value of the option
                text: "- Select Account -"
            }
        });

        //Date picker
        $('#paid_at').datepicker({
            format: 'yyyy-mm-dd',
            todayBtn: 'linked',
            autoclose: true,
            language: 'en'
        });

        $("#debit_account_id").select2({
            placeholder: "- Select Account -"
        });

        $("#credit_account_id").select2({
            placeholder: "- Select Account -"
        });
    });
</script>
<!-- Ledger Report Styling -->
<link rel='stylesheet' href='w/css/akLedgerReport.css'>

<!-- Overlay Styling -->
<style>
.overlay {
  position: absolute;
  display: none;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0,0,0,0.5);
  z-index: 2;
  cursor: not-allowed;
}
.overlayText{
  position: absolute;
  top: 400px;
  left: 50%;
  font-size: 50px;
  color: white;
  transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
}
.loader {
  position: absolute;
  left: 50%;
  top: 300px;
  z-index: 1;
  width: 150px;
  height: 150px;
  margin: -75px 0 0 -75px;
  border: 16px solid #f3f3f3;
  border-radius: 50%;
  border-top: 16px solid #3498db;
  width: 120px;
  height: 120px;
  -webkit-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
}
@-webkit-keyframes spin {
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
</style>

%% therapist-clientlist
<link rel='stylesheet' href='{{ CATSDIR_CSS }}slider.css'>
<link rel='stylesheet' href='{{ CATSDIR_CSS }}therapist-clientlist.css'>
<script src='{{ CATSDIR_JS }}slider.js'></script>
<script src='{{ CATSDIR_JS }}therapist-clientlist.js'></script>

%% clinics
<script>
	function submitModal(e){
		var formData = new FormData(e.currentTarget.form);
		formData.append("action",e.currentTarget.value);
        var formURL = $(e.currentTarget.form).attr("action");
        $.ajax({
            type: "POST",
            data: formData,
            cache       : false,
            contentType : false,
            processData : false,
            url: formURL,
            success: function(data, textStatus, jqXHR) {
                var jsData = JSON.parse(data)
                if(jsData.bOk){
					document.getElementById('action_result').innerHTML = jsData.sOut;
					var iframe = document.getElementById('image_ID').value;
					document.getElementById(iframe).contentWindow.location.reload();
                }
            },
            error: function(jqXHR, status, error) {
                console.log(status + ": " + error);
            }
        });
        e.preventDefault();
	}

	function showModal(id){
		document.getElementById('action_result').innerHTML = "";
		$('#imagePreview').attr('src', "#");
		switch(id){
		case 'slogo':
			document.getElementById('imageName').innerHTML = "Square Logo";
			break;
		case 'wlogo':
			document.getElementById('imageName').innerHTML = "Wide Logo";
			break;
		case 'footer':
			document.getElementById('imageName').innerHTML = "Footer";
			break;
		}
		document.getElementById('clinic_image_form').reset();
		document.getElementById('image_ID').value=id;
		var iframe = document.getElementById(id);
		document.getElementById('imagePreview').style.maxWidth = iframe.style.width;
		document.getElementById('imagePreview').style.maxHeight = iframe.style.height;
		$('#clinic_image_dialog').modal('show');
	}
	
	var reader = new FileReader();
	reader.onload = function (e) {
	    $('#imagePreview').attr('src', e.target.result);
	}
	
   function readURL(input) {
        if (input.files && input.files[0]) {
            reader.readAsDataURL(input.files[0]);
        }
    }
   window.addEventListener("DOMContentLoaded", function(){
        $("#imageSelector").change(function(){
            readURL(this);
        });
   });
	
</script>

%% manage-users
<script src='{{ CATSDIR_JS }}manage-users.js'></script>

%% file-upload
<script>
	function submitForm(e){
		var formData = new FormData(e.currentTarget.form);
		formData.append("cmd","therapist-resource-upload");
		e.currentTarget.parentElement.innerHTML = "<button><i class='fa fa-sync-alt fa-spin'></i> Uploading</button>";
        $.ajax({
            type: "POST",
            data: formData,
            cache       : false,
            contentType : false,
            processData : false,
            url: 'jx.php',
            success: function(data, textStatus, jqXHR) {
                var jsData = JSON.parse(data)
                if(jsData.bOk){
					//document.getElementById('uploadForm').innerHTML = jsData.sOut;
                }
                else{
                	document.getElementById('uploadForm').innerHTML = "<div class='alert alert-danger'>"+jsData.sErr+"</div>"
                }
            },
            error: function(jqXHR, status, error) {
                console.log(status + ": " + error);
            }
        });
        e.preventDefault();
	}

	function resetForm(){
		document.getElementById('uploadForm').innerHTML = upload;
	}
</script>